# 一、CSS3 概念

CSS 概念：层叠样式表(英文全称：Cascading Style Sheets )是一种用来表现 HTML（标准通用标记语
言的一个应用）或 XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS 不仅可以静态
地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。
主要作用：
(1) 增强控制页面的样式信息。
(2) 运行样式信息与页面内容分离的一种标记语言。

# 二、CSS3 的引入

## 1）内联样式表，行内引入

在标签内写样式
特点: 内联的样式表比其他的方法更加灵活 需要和展示的内容混合在一起样式表的一些优点

## 2) 内嵌样式表，内部引入

一般用的最多
注意：一般内嵌样式表写在 head 标签中，其他地方不推荐

## 3） 外部链接样式表，外部引入

rel 表示当前文档与连接文档的关系
type 被连接文档的类型
href 被连接文档的地址
注意: css文件就是以.css结尾

## 4）导入式（不推荐使用）

在一个css文件里，还可以引入其他的css

## 5）css3优先级

1.就近原则
2.理论上：行内>内嵌>链接>导入
3.实际上：内嵌、链接、导入在同一个文件头部，谁离相应的代码近，谁的优先级高。

# 三、CSS3 语法

css 定义分别由 选择器 属性 属性值 组成。
格式: p{color:red;background:yellow}
但一般我们为了方便查看，会有如下写法：
p{
color:red;
background:yellow;
} 2
）css 大小写不敏感，推荐使用小写。
3）属性和属性值之间用冒号分开 多个属性之间用分号隔开。
 css3中的注释
html 注释 <!-- 注释内容 -->
css 注释： /* 写你要注释的内容 */
注意: 注释中不能再包含注释。

# 四、CSS3 选择器

所谓的CSS选择器，其实就是如何选中HTML标签所提供的不同的方式，使用选择器，可以更加精准的
实现程序员的需求。

## 1、基本选择器 

### 1）类选择器

HTML 中使用 class="名称"
CSS 中使用 .名称{属性}
可以在 class 属性中通过空格分隔起多个名字

### 2）唯一选择器

HTML 中使用 id="名称" 属性
CSS 中使用 #名称{属性}
当前 id 属性只能有一个名字，区分开 class，用于精准查找。

### 3）标签选择器

根据标签名字匹配所有标签

### 4）通用符选择器

* 表示匹配所有的标签
4.2 层级选择器 * * *
1） 组合选择器
p,b 等多个选择器中间都用逗号隔开
2）包含选择器
p 空格 u 只要 u 标签被 p 标签包含
3） > 选择器
选择父元素 ul 的每一个 li 元素
4） + 选择器
紧贴着的兄弟元素( p 和 b 就是兄弟元素，而且只有一个是紧贴着的)
5） ~ 选择器
选择 p 元素之后的所有兄弟元素 b (p和b是同级关系)。

## 2、 层级选择器 

### 	1） 组合选择器

​	p,b 等多个选择器中间都用逗号隔开 

​	p,.er{
​		color:red;
​	} #
​		one,.er{
​			color:red
​	} 

### 	2）包含选择器

​	p 空格 u 只要 u 标签被 p 标签包含 

​	ul li{color:blue;} 

### 	3） > 选择器

​	选择父元素 ul 的每一个 li 元素 

​	ul>li{
​		color:blue;
​	} 

### 	4） + 选择器

​	紧贴着的兄弟元素( p 和 b 就是兄弟元素，而且只有一个是紧贴着的)。 

​	p+b{
​		color:red;
​	} 

### 	5） ~ 选择器

​	选择 p 元素之后的所有兄弟元素 b (p和b是同级关系)。 

​	p~b{
​		color:purple;
​	} 

## 3、 属性选择器 

​	属性选择器就是根据属性名或者属性值来找到元素
​	E element 元素首字母 标签 选择器
​	ATT attribute 属性名
​	VAL value 值
​	1）E[ATT] 匹配所有具有 ATT 属性的 E 元素，不考虑属性值。
​	注意: 如果把元素E去掉表示匹配所有ATT属性的元素。
​	2）E[ATT=VAL] 匹配所有 ATT 属性等于 VAL 的 E 元素。
​	3）E[ATT~=VAL] 匹配所有 ATT 属性具有多个空格分隔的值其中一个值等于 VAL 的 E 元素。
​	~ 英文模式下 shift+反引号
​	4）E[ATT^=VAL] 匹配 ATT 属性值以 VAL 开头的 E 元素。
​	^ 英文模式下 shift+6
​	5）E[ATT$=VAL] 匹配 ATT 属性值以 VAL 结尾的 E 元素。
​	$ 英文模式下 shift+4
​	6）E[ATT*=VAL] 匹配 ATT 属性的值包含 VAL 字符的 E 元素。

* 英文模式下 shift+8 

p[name]{color:red;} p标签有name属性就选中 
[name]{color:green;} 不管什么标签，有name属性就选中 
p[name='mi']{color:purple;} p标签，并且name等于mi的选中 
p[name~='ha']{color:red;} p标签，并且name属性中有多个空格分隔的值被选中
p[name^='q']{color:red;} p标签，并且name属性以p开头的选中 
p[name$='i']{color:gold;} p标签，并且name属性以p结尾的选中 
p[name*='i']{color:#dddddd;} p标签，并且name属性中含有i的选中 



# 五、CSS3常用属性 

## 1、 字体属性 

font-style 设置字体样式
normal 正常字体
italic 斜体
font-variant 设置字体为小型的大写字母
normal 默认值
small-caps 将小写字母变为小型大写字母
font-weight 设置字体粗细
bold 粗体
normal 默认值
font-size 设置字体大小
常见单位:
px 像素 屏幕中一个点就是一个像素(相对单位)
em 相当于一个汉字的大小
font-family 设置字体类型
注意: 页面中该属性设置的字体必须存在于客户端电脑中有的字体才可以使用
font 字体样式统一这个标签
但是要注意: 使用该属性时，值具有顺序关系必须按照顺序来写，不存在可以省略，其中 font-size 和
font-family 必须写。
font统一样式详解
font属性顺序: [斜体 小型字体 粗体] <字体大小[/行高]> <类型>
使用font统一设置上面所有属性的时候注意顺序是： font-style font-variant font-weight fontsize line-height font-family 

中文字体的2大分类：
无衬线:黑体,雅黑,文泉驿正黑 sans-serif
有衬线:宋体,新宋, serif (像衬衫一样有棱角) 

英文字体样式很大
等宽字体（Monaco,Courier,Monospace）
不等宽字体（KodchiangUPC） 

字体顺序: 独特字体,安全字体,字体大类; 

## 2、 文本属性

text-indent 首行缩进
常见单位: em 一个汉子的大小
line-height 用于设置当前文本的行高
常见单位:
px 像素 屏幕中一个点就是一个像素(相对单位)
em 相当于一个汉字的大小 

text-align 设置元素内容的水平对齐方式
取值: left center right
text-decoration 设置文本修饰
取值 : 

none 不修饰
underline 下划线
line-through 删除线
word-spacing 设置单词之间的距离（对于中文需要加上每个字加上空格才有效果）取值可以是负数
letter-spacing 设置字母之间的间距 取值可以是负数 

## 3、 背景属性

background-color 设置背景颜色
可以使用颜色的表达方式: 英文/六位的16进制/rgb()
在css中六位十六进制如果六位每两位都是相同的数字或者字母 我们可以将他们使用为三位数字或者字
母代替：例如: # ffff00 ----> #ff0
rgb(255,255,0)
rgb 表达式中: r 0-255 g 0-255 b 0-255 中间用逗号隔开
rgb(255,255,255)
transparent 透明色，背景透明，默认就是透明，写不写都一样
background-image 设置背景图片
background-image:url(图片地址)
url(‘text.jpg’)
url(“text.jpg”)
url(test.jpg)
url(https://www.baidu.com/img/bd_logo1.png)
background-repeat 设置背景重复
repeat-x 水平重复
repeat-y 垂直重复
repeat 默认值 水平方向和垂直方向重复
no-repeat 不重复
background-position 设置背景位置
格式1： background-position:水平位置和垂直位置
格式2：background-position:水平位置和垂直位置
英文单词: left,center,right/top,center,bottom
长度单位: 只要长度单位都可以 px em 常用像素
background-attachment 设置背景是否滚动
默认值: scroll 背景图片随着滚动条滚动
fixed 绑定页面 图片不随着页面而滚动
background 简写属性 推荐使用 没有顺序关系 



## 4、 尺寸属性

width 设置宽度
height 设置高度
min-height 最小高度
max-height 最大高度
备注：
最小的高度属性，当前高度如果没有达到最小高度那么高度将设置为最小高度
最大高度属性，允许当前元素根据内容自动减少高度，但是如果达到最大高度值，将不在添加高度
说人话：
假如我同时设置了宽100和高100，那你这个div就按照宽高给你设置，但如果我设置了最大高度200，
那高度就会根据你的内容自动延伸高度，直到你设置的最大高度拉倒。注意：设置高了，就不要设置最
大高度，无效。
最小高度同理，假如我设置宽100，高100，那这个div就这么大，100*100，但如果设置了最小高度
50，那就根据你的内容无限的拉长，但随着内容的缩小，小到你的最小高度50就拉倒了。
使用情况：
一般在实际的开发中，只设置设计的宽和高，不固定的自动拉伸不怎么使用，因为会导致布局不明确，
从而影响实际的网页效果。 

## 5 、列表属性

列表属性用于设置 ul 和 ol 的列表样式 

list-style-type : 设置列表的符号样式(固定样式 必须在手册中出现的才能使用，参考手册)
list-style-image : 使用指定的图片来代替列表的序号
注意: 如果同时存在image和type 以用户定义的image为准
格式: list-style-image:url(‘图片地址’）
list-style-position : 设置列表符号需要的位置
取值:
inside 需要在内容中
outside 需要在内容外 

## 6、 字体颜色补充 

color 设置字体颜色
取值: 英文单词 16进制 rgb() 

## 7、 定位属性

### 1） position 设置元素的定位方式

static 默认值。没有定位
absolute 绝对定位
relative 相对定位
fixed 定位到窗口
详解： 

absolute 绝对定位，以其他元素作为参照物移动指定距离的定位方式，默认是（body，也就是整个文
档的开头）
注意: 绝对定位以后，该元素不会占据原来的物理位置
如果只使用 position:absolute 没有任何意义，只是脱离文档流，需要配合方位使用
left :设置定位元素的水平移动位置(距离左边的距离)
top : 设置定位元素的垂直移动位置(距离顶部的距离)
right : 设置定位元素的水平移动位置(距离右边的距离)
bottom :设置定位元素的垂直移动位置(距离底部的距离)
关于绝对定位：

1. 如果该元素的外元素没有任何的一个元素采用position定位 那么此时的定位的参照元素是body或
    者说页面的参照点0,0
2. 如果元素的外层为非static(有了除默认值以外的定位位置)那么这个外层元素的成为该元素的参照
    点 这个外层元素的左上角才是我们的0,0
3. 如果元素的外层元素没有设置任何的position的值 那么该元素将寻找距离自己最近的其他设置过
    position的元素作为参照物(有个要求:必须是嵌套关系) 



### 2） relative 相对定位

相对定位，以当前元素作为参照移动指定的距离的定位方式，该元素在什么位置那么他就是以自己的左
上角为0,0
注意: 该元素依旧占据原来的位置，也就是你当初占了多大，给你留着，不管你飘到哪里，我都等你。 

### 3） fixed 固定定位，相对于窗口的定位 

## 8、 显示层级属性

z-index 设定定位元素z轴的距离(就是元素的显示顺序)
注意：必须配合绝对定位使用。
取值
auto 自动
number 数字
数字越大就会在最上面显示 



# 六、 布局属性 



## 1、 块状元素和行内元素

### 1） <div></div> 无意义的块状元素

什么是块级元素：具有宽度高度属性并且独占一行
块级元素的特点：

1. 独占一行
2. 宽度和浏览器宽度一样，与内容无关
3. 宽度和高度都可以调整
4. 可以容纳行内元素和其他的块元素
    2） <span></span> 无意义的行内元素
    什么是行内元素：没有宽度高度属性并且不独占一行
    行内元素的特点：
5. 和其他标签在同一行
6. 宽度与内容有关 内容改变宽度也改变
7. 宽度和高度不能调整
8. 容纳文本和其他的行内元素 

### 2）行内和块状元素转换

display 设置元素的显示方式
inline 将元素作为行内元素显示
block 将元素作为块级元素显示
inline-block 将元素作为行块级元素显示
none 设置该元素为不显示状态(隐藏) 



## 2、 显示与隐藏属性

visibility 设置元素是否显示
取值:
visible 显示(默认值)
hidden( 隐藏)
注意: visibility 和 display:none 的区别， visibility 的隐藏方式仅隐藏内容的显示，其占用的
空间依旧占用。而 display 的隐藏方式是彻底隐藏该元素的内容和位置。 

## 3、 设置内容超出部分 

overflow 设置内容元素超出部分
取值：
visible 始终可见(默认值)
hidden 超出部分隐藏处理
scroll 滚动条，超出内容有滚动条显示
auto 自动，如果超出内容他显示滚动条，如果没有超出不显示滚动条
注意: 中文会自动换行，英文单词也会自动换行，但是如果是一串英文，没有空格的情况下，是不会自
动换行，数字也是相同的。 



## 4、 float 浮动

float 设置浮动，脱离普通文档流
取值：
left 左浮动
right 右浮动
注意:

1. 如果父级没有给高度，那么他就会变成一条线，因为里面没有任何内容所有内容全部在浮动层面，不
    在普通文档流层面
2. 如果你使用浮动，请将你的元素计算精确，如果不精确会有弊端。 



clear 清除浮动，让你脱离文档流的内容(float) 回到文档流中
取值：
left 清除左边的浮动
right 清除右边的浮动
both 清除两端浮动，一般使用这个
说人话：
所谓清除浮动，其实非常容易理解，就是我不允许有人在我头上飘着。
推荐:
每次看见浮动都记得清除浮动什么地方出现就在什么地方清除(同一级别的清除一次)，但是不能说统一
一次全部清除，只要出现浮动就要清除浮动，如果不清除浮动后期页面会非常乱，你会找不到哪些元素
被压在低下了，哪些应该出来。
**一定记得要清除浮动，一定记得要清除浮动，一定记得要清除浮动。** 



## 5、 盒子模型 

### 1） margin外边距

1） margin 外边距，设置盒子模型的外部距离。
margin-top : 设置当前元素和顶部元素之间的距离
margin-left : 设置当前元素和左部元素之间的距离
margin-right : 设置当前元素和右部元素之间的距离
margin-bottom : 设置当前元素和底部之间元素的距离 



简写属性：
1. 分别设置4个边的间距(1个参数)
    margin:同时设置上下左右
2. 分别设置4个边的间距(2个参数)
    margin: 上下/左右
3. 分别设置4个边的间距(3个参数)
    margin: 上边/左右/下边
4. 分别设置4个边的间距(4个参数)
    margin: 上/右/下/左 

记住: margin:0px auto 可以让块状元素水平居中 

## 6、padding 内边距

### 1） padding : 设置元素边框与内容之间的距离

padding-top : 设定当前元素的内容和顶部的边框之间距离
padding-left : 设定当前元素的内容和左边的边框之间距离
padding-bottom : 设定当前元素的内容和底部的边框之间距离 

padding-right : 设定当前元素的内容和右边的边框之间距离 

简写属性：
1. 分别设置4个边的间距(1个参数)
    padding: 同时设置上下左右
2. 分别设置4个边的间距(2个参数)
    paddingt: 上下/左右
3. 分别设置4个边的间距(3个参数)
    paddingt: 上边/左右/下边
4. 分别设置4个边的间距(4个参数)
    paddingt: 上/右/下/左
    一般设置padding和marging，都不要同时设置4个参数，会破坏盒子模型理想的效果。 

### 2） border边框 

3） border 设置盒子模型边框的属性
border-color: 同时设定4个边的边框颜色
border-width: 同时设定4个边的边框宽度
border-style: 同时设定4个边的边框的样式
border-top 单独设定顶部边框的边框颜色样式宽度
border-top-width 单独设定顶部边框的边框宽度
border-top-color 单独设定顶部边框的边框颜色
border-top-style 单独设定顶部边框的边框样式
border-left 单独设定左部边框的边框颜色样式宽度
border-left-width 单独设定左部边框的边框宽度
border-left-color 单独设定左部边框的边框颜色
border-left-style 单独设定左部边框的边框样式
border-bottom 单独设定底部边框的边框颜色样式
border-bottom-width 单独设定底部边框的边框宽度
border-bottom-color 单独设定底部边框的边框颜色
border-bottom-style 单独设定底部边框的边框样式
border-right 单独设定右部边框的边框颜色样式宽度
border-right-width 单独设定右部边框的边框宽度
border-right-color 单独设定右部边框的边框颜色
border-right-style 单独设定右部边框的边框样式
边框样式的取值:
dotted 点线
dashed 虚线
solid 实线
double 双实线
groove 槽状线
ridge 脊线
inset 内嵌效果
outset 外凸效果 

border-image 边框图片
border-radius 圆弧
1. 一个值代表四个角
2. 二个值代表 左上右下 右上左下
3. 三个值 左上 右上左下 右下
4. 四个值 左上 右上 右下 左下 

border 简写： border:1px solid red 同时设置4个边线的厚度，样式，颜色。 